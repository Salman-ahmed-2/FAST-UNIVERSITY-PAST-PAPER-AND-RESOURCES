
// Compute the sign of an integer?

#include <iostream>
#include <cmath>
#include<bitset>
using namespace std;

int main()
{
    short n;
    cin>>n;
/*    cout<<bitset<16>(n)<<endl;
    bool c= n & (int)pow(2,15);
    cout<<boolalpha<<!c<<endl;
cout<<bitset<16>(pow(2,15));*/
/////////////////////

bool s = n>>=15;
cout<<boolalpha<<!s<<endl;

    return 0;
}


//Detect if two integers have opposite signs?
#include <iostream>
#include <cmath>
#include<bitset>
using namespace std;

int main()
{
    short n1,n2;
    cin>>n1>>n2;

     n1>>=15; n2>>=15;
     bool b=(n1^n2);
    cout<<boolalpha<<b<<endl;

    return 0;
}

//Write a program to check an integer is a power of 2?
#include <iostream>
#include <cmath>
#include<bitset>
using namespace std;

int main()
{
    short n1,n2;
    cin>>n1;
    cout<<bitset<16>(n1)<<"   "<<n1<<endl;
    cout<<bitset<16>(n1-1)<<"   "<<n1-1<<endl; 
    cout<<bitset<16>(n1&(n1-1))<<"   "<<(n1&(n1-1))<<endl; 

    return 0;
}

//Write a program to check an integer is a multiple of 4?
#include <iostream>
#include <cmath>
#include<bitset>
using namespace std;

int main()
{
    short n1;
    cin>>n1;
    cout<<bitset<16>(n1)<<"   "<<n1<<endl;
    cout<<bitset<16>(3)<<"   "<<n1-3<<endl; 
    cout<<bitset<16>(n1&(3))<<"   "<<(n1&(3))<<endl; 

    return 0;
}

///Q) How to set a particular bit in C?

#include <iostream>
#include <cmath>
#include<bitset>
using namespace std;

int main()
{
    short n1,bitposition;
    cin>>n1>>bitposition;
    cout<<bitset<16>(n1)<<"   "<<(n1)<<endl;
    cout<<"bitposition "<<bitposition<<endl;
    
    short n2=1;
    n2=n2<<(bitposition-1);
    n1=n1|n2;
    cout<<bitset<16>(n1)<<endl;
    // n1=n1|(1<<(bitposition-1))
    
    return 0;
}

//Q) How to clear a particular bit in C?
Number  &=  ~ (1<< nth Position)
//Q swap 4 bits 

#include <iostream>
#include <cmath>
#include<bitset>
using namespace std;

int main()
{ //swap 8 bit
    short n1;
    cin>>n1;
    cout<<bitset<16>(n1)<<"   "<<(n1)<<endl;
    
    short temp1=n1&(int(pow(2,4)-1));
    temp1<<=4;
    cout<<bitset<16>(temp1)<<"   "<<endl;
    short temp2=(int)(pow(2,16)-(pow(2,4)));
    temp2>>3;
    cout<<bitset<16>(temp2)<<"   "<<endl;
    short temp3=n1&temp2;
    temp3>>=4;
    n1=temp1|temp3;
    cout<<bitset<16>(n1)<<"   "<<endl;
    // n1=n1|(1<<(bitposition-1))
    
    return 0;
}

Q) Swap two numbers without using a temporary variable?
a=a^b
b=a^b
a=a^b

//Q) Multiply a number by 2 using bitwise operation

a<<1

//Q) Multiply a given Integer with 3.5 using bitwise operation
data = (data<<1) + data + (data>>1);//equivalent to data * 3.5

///////////////////////////
#include <iostream>
#include<cmath>
#include<bitset>
using namespace std;

int main()
{
    short n;
    cin>>n;
    //turn off last consecutive bits 
    cout<<n<<"   "<<bitset<16>(n)<<endl;
    cout<<n+1<<"   "<<bitset<16>(n+1)<<endl;
    cout<<(n&(n+1))<<"   "<<bitset<16>(n&(n+1))<<endl;
    /*
    short temp=n;
    int count=0;
    if(temp&1)
    {
        count++;
        temp>>=1;
        if(temp&1)
        { 
            count++;
            temp>>=1;
           if(temp&1)
            { 
                count++;
                temp>>=1;
           int p=int(pow(2,count+1)-1);
            n=n&(~p);
            cout<<n<<"  "<<bitset<16>(n)<<endl;
        
            }else
        {
            int p=int(pow(2,count+1)-1);
            n=n&(~p);
            cout<<n<<"  "<<bitset<16>(n)<<endl;
        }
        }
        else
        {
            int p=int(pow(2,count+1)-1);
            n=n&(~p);
            cout<<n<<"  "<<bitset<16>(n)<<endl;
        }
    }
    */
    return 0;
}
